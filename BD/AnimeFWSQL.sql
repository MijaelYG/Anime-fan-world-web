-- MySQL Script generated by MySQL Workbench
-- Sun Nov 17 00:41:36 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema AnimeFW
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `AnimeFW` ;

-- -----------------------------------------------------
-- Schema AnimeFW
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `AnimeFW` DEFAULT CHARACTER SET utf8 ;
USE `AnimeFW` ;

-- -----------------------------------------------------
-- Table `AnimeFW`.`Tipo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AnimeFW`.`Tipo` (
  `id_tipo` INT AUTO_INCREMENT NOT NULL,
  `tipo` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_tipo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `AnimeFW`.`Genero`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AnimeFW`.`Genero` (
  `id_genero` INT AUTO_INCREMENT NOT NULL,
  `genero` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_genero`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `AnimeFW`.`Anime`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AnimeFW`.`Anime` (
  `id_anime` INT AUTO_INCREMENT NOT NULL,
  `id_tipo` INT NOT NULL,
  `nombre` VARCHAR(255) NOT NULL,
  `descripcion` VARCHAR(500) NOT NULL,
  `fecha_estreno` DATE NOT NULL,
  `estado` VARCHAR(45) NOT NULL,
  `fecha_prox_capitulo` DATE NULL,
  PRIMARY KEY (`id_anime`),
  CONSTRAINT `FK_id_tipo`
    FOREIGN KEY (`id_tipo`)
    REFERENCES `AnimeFW`.`Tipo` (`id_tipo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `FK_id_tipo_idx` ON `AnimeFW`.`Anime` (`id_tipo` ASC);


-- -----------------------------------------------------
-- Table `AnimeFW`.`Anime_genero`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AnimeFW`.`Anime_genero` (
  `id_anime_genero` INT AUTO_INCREMENT NOT NULL,
  `id_anime` INT NOT NULL,
  `id_genero` INT NOT NULL,
  PRIMARY KEY (`id_anime_genero`),
  CONSTRAINT `FK_id_animeag`
    FOREIGN KEY (`id_anime`)
    REFERENCES `AnimeFW`.`Anime` (`id_anime`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_id_generosag`
    FOREIGN KEY (`id_genero`)
    REFERENCES `AnimeFW`.`Genero` (`id_genero`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `FK_id_animeag_idx` ON `AnimeFW`.`Anime_genero` (`id_anime` ASC) ;

CREATE INDEX `FK_id_generosag_idx` ON `AnimeFW`.`Anime_genero` (`id_genero` ASC) ;

CREATE UNIQUE INDEX `UQ_idanime_idgenero` ON `AnimeFW`.`Anime_genero` (`id_anime` ASC, `id_genero` ASC) ;


-- -----------------------------------------------------
-- Table `AnimeFW`.`Capitulo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AnimeFW`.`Capitulo` (
  `id_capitulo` INT AUTO_INCREMENT NOT NULL,
  `id_anime` INT NOT NULL,
  `numero_capitulo` INT NOT NULL,
  `fecha_estreno` DATE NOT NULL,
  `estado` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_capitulo`),
  CONSTRAINT `FK_id_animecap`
    FOREIGN KEY (`id_anime`)
    REFERENCES `AnimeFW`.`Anime` (`id_anime`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `FK_id_animecap_idx` ON `AnimeFW`.`Capitulo` (`id_anime` ASC) ;


-- -----------------------------------------------------
-- Table `AnimeFW`.`Servidor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AnimeFW`.`Servidor` (
  `id_servidor` INT AUTO_INCREMENT NOT NULL,
  `id_capitulo` INT NOT NULL,
  `tipo` VARCHAR(45) NOT NULL,
  `url` VARCHAR(2090) NOT NULL,
  PRIMARY KEY (`id_servidor`),
  CONSTRAINT `Fk_id_capituloserver`
    FOREIGN KEY (`id_capitulo`)
    REFERENCES `AnimeFW`.`Capitulo` (`id_capitulo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `Fk_id_capituloserver_idx` ON `AnimeFW`.`Servidor` (`id_capitulo` ASC) ;


-- -----------------------------------------------------
-- Table `AnimeFW`.`Rol`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AnimeFW`.`Rol` (
  `id_rol` INT AUTO_INCREMENT NOT NULL,
  `rol` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_rol`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `AnimeFW`.`Usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AnimeFW`.`Usuario` (
  `id_usuario` INT AUTO_INCREMENT NOT NULL,
  `id_rol` INT NOT NULL,
  `nombres` VARCHAR(45) NOT NULL,
  `apellidos` VARCHAR(45) NOT NULL,
  `correo` VARCHAR(45) NOT NULL,
  `usuario` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_usuario`),
  CONSTRAINT `FK_id_rol`
    FOREIGN KEY (`id_rol`)
    REFERENCES `AnimeFW`.`Rol` (`id_rol`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `FK_id_rol_idx` ON `AnimeFW`.`Usuario` (`id_rol` ASC) ;


-- -----------------------------------------------------
-- Table `AnimeFW`.`Comentario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AnimeFW`.`Comentario` (
  `id_comentario` INT AUTO_INCREMENT NOT NULL,
  `id_usuario` INT NOT NULL,
  `id_anime` INT NOT NULL,
  `comentario` VARCHAR(10000) NOT NULL,
  `fecha_creacion` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  `id_comentario_resp` INT NULL,
  PRIMARY KEY (`id_comentario`),
  CONSTRAINT `FK_id_usuariocom`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `AnimeFW`.`Usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_id_animecom`
    FOREIGN KEY (`id_anime`)
    REFERENCES `AnimeFW`.`Anime` (`id_anime`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_id_comentariocom`
    FOREIGN KEY (`id_comentario_resp`)
    REFERENCES `AnimeFW`.`Comentario` (`id_comentario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `FK_id_usuariocom_idx` ON `AnimeFW`.`Comentario` (`id_usuario` ASC) ;

CREATE INDEX `FK_id_animecom_idx` ON `AnimeFW`.`Comentario` (`id_anime` ASC) ;

CREATE INDEX `FK_id_comentariocom_idx` ON `AnimeFW`.`Comentario` (`id_comentario_resp` ASC) ;


-- -----------------------------------------------------
-- Table `AnimeFW`.`Favorito_anime`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AnimeFW`.`Favorito_anime` (
  `id_favorito_anime` INT AUTO_INCREMENT NOT NULL,
  `id_usuario` INT NOT NULL,
  `id_anime` INT NOT NULL,
  PRIMARY KEY (`id_favorito_anime`),
  CONSTRAINT `FK_usuariofav`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `AnimeFW`.`Usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_id_animefav`
    FOREIGN KEY (`id_anime`)
    REFERENCES `AnimeFW`.`Anime` (`id_anime`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `FK_usuariofav_idx` ON `AnimeFW`.`Favorito_anime` (`id_usuario` ASC) ;

CREATE INDEX `FK_id_animefav_idx` ON `AnimeFW`.`Favorito_anime` (`id_anime` ASC) ;

CREATE UNIQUE INDEX `UQ_idanime_idusuario` ON `AnimeFW`.`Favorito_anime` (`id_usuario` ASC, `id_anime` ASC) ;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
